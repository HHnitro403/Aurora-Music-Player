<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="using:AuroraMusic.Models"
        xmlns:modals="using:AuroraMusic.Views.Modals"
        xmlns:materialIcons="using:Material.Icons.Avalonia"
        xmlns:local="using:AuroraMusic"
        Design.DesignWidth="900" Design.DesignHeight="650"
        x:Class="AuroraMusic.MainWindow"
        x:Name="TheWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="Aurora Music Player"
        Width="800" Height="600"
        MinWidth="700" MinHeight="500"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        Loaded="MainWindow_Loaded">

	<Window.Styles>
		<!-- Base style for all MaterialIcon controls -->
		<Style Selector="materialIcons|MaterialIcon">
			<Setter Property="Width" Value="24" />
			<Setter Property="Height" Value="24" />
			<Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
		</Style>

		<!-- Style for circular playback buttons -->
		<Style Selector="Button.Playback">
			<Setter Property="Width" Value="50" />
			<Setter Property="Height" Value="50" />
			<Setter Property="CornerRadius" Value="25" />
			<Setter Property="Background" Value="{DynamicResource ControlTransparentBrush}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Property="RenderTransform" Duration="0.1" />
					<BrushTransition Property="Background" Duration="0.1" />
				</Transitions>
			</Setter>
		</Style>

		<!-- Hover effect for playback buttons -->
		<Style Selector="Button.Playback:pointerover">
			<Setter Property="Background" Value="{DynamicResource ControlHoverBrush}" />
			<Setter Property="RenderTransform" Value="scale(1.05)" />
		</Style>

		<!-- Style for the main Play/Pause button to make it more prominent -->
		<Style Selector="Button#PlayPauseButton">
			<Setter Property="Width" Value="60" />
			<Setter Property="Height" Value="60" />
			<Setter Property="CornerRadius" Value="30" />
			<Setter Property="Background" Value="{DynamicResource AccentBrush}" />
		</Style>
		<Style Selector="Button#PlayPauseButton:pointerover">
			<Setter Property="Background" Value="{DynamicResource AccentHoverBrush}" />
		</Style>
		<Style Selector="Button#PlayPauseButton materialIcons|MaterialIcon">
			<Setter Property="Width" Value="30" />
			<Setter Property="Height" Value="30" />
		</Style>

		<!-- Style for transparent buttons like Settings, Repeat, etc. -->
		<Style Selector="Button.Transparent">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}" />
			<Setter Property="Transitions">
				<Transitions>
					<BrushTransition Property="Foreground" Duration="0.1" />
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="Button.Transparent:pointerover materialIcons|MaterialIcon">
			<Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
		</Style>

		<!-- Style for Window Control Buttons (Minimize, Maximize, Close) -->
		<Style Selector="Button.WindowControl">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="VerticalAlignment" Value="Stretch" />
			<Setter Property="Width" Value="46" />
			<Setter Property="Transitions">
				<Transitions>
					<BrushTransition Property="Background" Duration="0.1" />
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="Button.WindowControl:pointerover">
			<Setter Property="Background" Value="{DynamicResource ControlHoverBrush}" />
		</Style>
		<Style Selector="Button.WindowControl.Close:pointerover">
			<Setter Property="Background" Value="#E81123" />
		</Style>
		<Style Selector="Button.WindowControl materialIcons|MaterialIcon">
			<Setter Property="Width" Value="16" />
			<Setter Property="Height" Value="16" />
		</Style>

		<!-- General styling for sliders -->
		<Style Selector="Slider">
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<!-- Styling for TextBlocks used as labels -->
		<Style Selector="TextBlock.Label">
			<Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
			<Setter Property="VerticalAlignment" Value="Center" />
		</Style>

		<!-- Styling for the main TabControl -->
		<Style Selector="TabControl">
			<Setter Property="Background" Value="Transparent" />
		</Style>
		<Style Selector="TabItem">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}" />
			<Setter Property="FontSize" Value="14" />
			<Setter Property="Padding" Value="10,8" />
			<Setter Property="Transitions">
				<Transitions>
					<BrushTransition Property="Foreground" Duration="0.1" />
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="TabItem:selected">
			<Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
		</Style>
		<Style Selector="TabItem:pointerover">
			<Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
		</Style>

		<!-- Style for ListBoxItem to indicate selection -->
		<Style Selector="ListBoxItem">
			<Setter Property="Padding" Value="10" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Transitions">
				<Transitions>
					<BrushTransition Property="Background" Duration="0.1" />
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="ListBoxItem:selected">
			<Setter Property="Background" Value="{DynamicResource AccentBrush}" />
		</Style>
		<Style Selector="ListBoxItem:pointerover">
			<Setter Property="Background" Value="{DynamicResource ControlHoverBrush}" />
		</Style>
	</Window.Styles>

	<Window.Resources>
		<!-- Color Palette -->
		<Color x:Key="PrimaryTextColor">White</Color>
		<Color x:Key="SecondaryTextColor">LightGray</Color>
		<Color x:Key="AccentColor">#AA444444</Color>
		<Color x:Key="AccentHoverColor">#CC555555</Color>
		<Color x:Key="TransparentControlColor">#99333333</Color>
		<Color x:Key="HoverControlColor">#55555555</Color>
		<Color x:Key="BorderControlColor">#AAFFFFFF</Color>
		<Color x:Key="PanelBackgroundColor">#88111111</Color>
		<Color x:Key="ListBackgroundColor">#661C1C1C</Color>
		<Color x:Key="ContentBackgroundColor">#44000000</Color>

		<!-- Brushes using the color palette -->
		<SolidColorBrush x:Key="TextPrimaryBrush" Color="{DynamicResource PrimaryTextColor}" />
		<SolidColorBrush x:Key="TextSecondaryBrush" Color="{DynamicResource SecondaryTextColor}" />
		<SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}" />
		<SolidColorBrush x:Key="AccentHoverBrush" Color="{DynamicResource AccentHoverColor}" />
		<SolidColorBrush x:Key="ControlTransparentBrush" Color="{DynamicResource TransparentControlColor}" />
		<SolidColorBrush x:Key="ControlHoverBrush" Color="{DynamicResource HoverControlColor}" />
		<SolidColorBrush x:Key="ControlBorderBrush" Color="{DynamicResource BorderControlColor}" />
		<SolidColorBrush x:Key="PanelBackgroundBrush" Color="{DynamicResource PanelBackgroundColor}" />
		<SolidColorBrush x:Key="ListBackgroundBrush" Color="{DynamicResource ListBackgroundColor}" />
		<SolidColorBrush x:Key="ContentBackgroundBrush" Color="{DynamicResource ContentBackgroundColor}" />
	</Window.Resources>

	<!-- The root Panel allows the PopupOverlay to sit on top of the main content -->
	<Panel>
		<!-- This Border now correctly handles the padding for the maximized window state -->
		<Border x:DataType="local:MainWindow" Padding="{Binding #TheWindow.OffScreenMargin}">
			<Grid Name="MainGrid" RowDefinitions="Auto,*,Auto" ColumnDefinitions="Auto,*">

				<!-- Top Bar / Title Bar -->
				<Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="40" Background="{DynamicResource PanelBackgroundBrush}" Name="TitleBar" PointerPressed="TitleBar_PointerPressed" ColumnDefinitions="Auto,*,Auto">
					<Button Name="HamburgerButton" Grid.Column="0" Classes="Transparent" Click="HamburgerButton_Click" Margin="5,0,0,0">
						<materialIcons:MaterialIcon Kind="Menu" />
					</Button>
					<TextBlock Grid.Column="1" Text="Aurora Music Player" VerticalAlignment="Center" FontWeight="Bold" Margin="15,0,0,0" Foreground="{DynamicResource TextPrimaryBrush}" />

					<!-- Window Control Buttons -->
					<StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Name="MinimizeButton" Classes="WindowControl" Click="MinimizeButton_Click">
							<materialIcons:MaterialIcon Kind="WindowMinimize" />
						</Button>
						<Button Name="MaximizeButton" Classes="WindowControl" Click="MaximizeButton_Click">
							<materialIcons:MaterialIcon Kind="WindowMaximize" />
						</Button>
						<Button Name="CloseButton" Classes="WindowControl" Click="CloseButton_Click">
							<materialIcons:MaterialIcon Kind="Close" />
						</Button>
					</StackPanel>
				</Grid>

				<!-- SplitView for Navigation and Content -->
				<SplitView Name="MainSplitView" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" DisplayMode="Overlay" IsPaneOpen="{Binding IsPaneOpen, Mode=TwoWay}" PaneBackground="{DynamicResource ListBackgroundBrush}">
					<SplitView.Pane>
						<!-- Left Sidebar: Navigation -->
						<Grid Margin="0,0,5,0">
							<ListBox Name="NavigationListBox" SelectionChanged="Navigation_SelectionChanged" Background="Transparent" BorderThickness="0">
								<ListBox.ItemTemplate>
									<DataTemplate x:DataType="models:NavigationItem">
										<StackPanel Orientation="Horizontal" Spacing="10" Margin="10">
											<materialIcons:MaterialIcon Kind="{Binding Icon}" Width="20" Height="20" />
											<TextBlock Text="{Binding Title}" FontSize="14" VerticalAlignment="Center" />
										</StackPanel>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Grid>
					</SplitView.Pane>
					<SplitView.Content>
						<!-- Main Content Area -->
						<ContentControl Name="MainContentArea" Background="{DynamicResource ContentBackgroundBrush}" Padding="20">
							<!-- Initial content for tutorial-like UX -->
							<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding !IsMusicLoaded}">
								<TextBlock Text="Welcome to Aurora Music Player!" FontSize="24" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,10" />
								<TextBlock Text="To get started, please add your music folders in the Settings." FontSize="16" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Margin="0,0,0,20" />
								<Button Content="Go to Settings" Click="SettingsButton_Click" Padding="20,10" />
							</StackPanel>
						</ContentControl>
					</SplitView.Content>
				</SplitView>

				<!-- Bottom Bar: Playback Controls -->
				<Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Background="{DynamicResource PanelBackgroundBrush}" Margin="0,0,0,10">
					<Grid RowDefinitions="Auto,Auto">

						<!-- Song Progress Bar -->
						<Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto" Margin="10,0,10,10">
							<TextBlock Name="TimeLabel" Grid.Column="0" Text="00:00" Classes="Label" Margin="0,0,10,0" />
							<Slider Name="SongProgressBar" Grid.Column="1" Minimum="0" Maximum="100" Value="0" />
							<TextBlock Name="DurationLabel" Grid.Column="2" Text="00:00" Classes="Label" Margin="10,0,0,0" />
						</Grid>

						<!-- Playback Controls and Info -->
						<Grid Grid.Row="1" ColumnDefinitions="1*,Auto,1*" Margin="10,0,10,0">
							<!-- Now Playing Info (Left Aligned) -->
							<Grid Grid.Column="0" VerticalAlignment="Center" ColumnDefinitions="Auto,*
                                  ">
								<Image x:Name="AlbumArtImage" Grid.Column="0" Width="50" Height="50" Margin="0,0,10,0" Source="/Assets/avalonia-logo.ico" />
								<TextBlock Name="NowPlayingInfoText" Grid.Column="1" Text="Select a song to play" FontSize="14" FontWeight="SemiBold"
                                           TextTrimming="CharacterEllipsis" Classes="Label" VerticalAlignment="Center" />
							</Grid>

							<!-- Playback Buttons (Center Aligned) -->
							<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Spacing="15">
								<Button Name="ShuffleButton" Click="ShuffleButton_Click" Classes="Playback">
									<materialIcons:MaterialIcon Name="ShuffleIcon" Kind="Shuffle" />
								</Button>
								<Button Name="PreviousButton" Click="PreviousButton_Click" Classes="Playback">
									<materialIcons:MaterialIcon Kind="SkipPrevious" />
								</Button>
								<Button Name="PlayPauseButton" Click="PlayPauseButton_Click" Classes="Playback">
									<materialIcons:MaterialIcon Name="PlayPauseIcon" Kind="Play" />
								</Button>
								<Button Name="NextButton" Click="NextButton_Click" Classes="Playback">
									<materialIcons:MaterialIcon Kind="SkipNext" />
								</Button>
							</StackPanel>

							<!-- Volume and Repeat Controls (Right Aligned) -->
							<StackPanel Grid.Column="2" Orientation="Horizontal" Spacing="15" VerticalAlignment="Center" HorizontalAlignment="Right">
								<Button Name="RepeatButton" Click="RepeatButton_Click" Classes="Transparent">
									<materialIcons:MaterialIcon Name="RepeatIcon" Kind="Repeat" />
								</Button>
								<materialIcons:MaterialIcon Kind="VolumeHigh" VerticalAlignment="Center" />
								<Slider Name="VolumeSlider" Width="120" Minimum="0" Maximum="100" Value="100" />
							</StackPanel>
						</Grid>
					</Grid>
				</Grid>
			</Grid>
		</Border>

		<!-- Popup Overlay sits on top of the Border and is not affected by its padding -->
		<!-- Removed the UpdatePopupView from here, as it's now a Window -->
		<Grid Name="PopupOverlay" IsVisible="false" Background="#88000000" ZIndex="100">
			<!-- This grid will be used to show other popups if needed, but UpdatePopupView is now a separate Window -->
		</Grid>
	</Panel>
</Window>